// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.ProjectCompanyEmployee.DbContexts;

#nullable disable

namespace WebApi.ProjectCompanyEmployee.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20231211082607_InitialWithSeed")]
    partial class InitialWithSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.ProjectCompanyEmployee.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Founded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Industry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a dummy company.",
                            Founded = new DateTime(2013, 12, 11, 8, 26, 7, 448, DateTimeKind.Local).AddTicks(3917),
                            Industry = "Tech",
                            LogoUrl = "https://www.dummycompany1.com/logo.png",
                            Name = "Dummy Company 1",
                            Website = "https://www.dummycompany1.com"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This is another dummy company.",
                            Founded = new DateTime(2018, 12, 11, 8, 26, 7, 448, DateTimeKind.Local).AddTicks(3996),
                            Industry = "Finance",
                            LogoUrl = "https://www.dummycompany2.com/logo.png",
                            Name = "Dummy Company 2",
                            Website = "https://www.dummycompany2.com"
                        });
                });

            modelBuilder.Entity("WebApi.ProjectCompanyEmployee.Entities.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("HiredOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyId = 1,
                            Department = "Engineering",
                            Email = "john.doe@dummycompany.com",
                            FirstName = "John",
                            HiredOn = new DateTime(2021, 12, 11, 8, 26, 7, 448, DateTimeKind.Local).AddTicks(4202),
                            LastName = "Doe",
                            Title = "Software Engineer"
                        },
                        new
                        {
                            ID = 2,
                            CompanyId = 1,
                            Department = "Engineering",
                            Email = "john.doe@dummycompany.com",
                            FirstName = "John 2",
                            HiredOn = new DateTime(2022, 12, 11, 8, 26, 7, 448, DateTimeKind.Local).AddTicks(4210),
                            LastName = "Doe 2",
                            Title = "Software Engineer"
                        },
                        new
                        {
                            ID = 3,
                            CompanyId = 2,
                            Department = "Engineering",
                            Email = "john.doe@dummycompany.com",
                            FirstName = "John 3",
                            HiredOn = new DateTime(2021, 12, 11, 8, 26, 7, 448, DateTimeKind.Local).AddTicks(4214),
                            LastName = "Doe 3",
                            Title = "Software Engineer"
                        },
                        new
                        {
                            ID = 4,
                            CompanyId = 2,
                            Department = "Engineering",
                            Email = "john.doe@dummycompany.com",
                            FirstName = "John 4",
                            HiredOn = new DateTime(2022, 12, 11, 8, 26, 7, 448, DateTimeKind.Local).AddTicks(4218),
                            LastName = "Doe 4",
                            Title = "Software Engineer"
                        });
                });

            modelBuilder.Entity("WebApi.ProjectCompanyEmployee.Entities.Employee", b =>
                {
                    b.HasOne("WebApi.ProjectCompanyEmployee.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WebApi.ProjectCompanyEmployee.Entities.Company", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
